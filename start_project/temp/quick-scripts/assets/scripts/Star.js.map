{"version":3,"sources":["Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","update","dt","getPlayerDistance","onPicked","opacityRatio","game","timer","starDuration","minOpacity","node","opacity","Math","floor","playerPos","player","getPosition","dist","position","sub","mag","spawnNewStar","gainScore","destroy"],"mappings":";;;;;;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAY;AADJ,KAHP;AAMLC,UANK,kBAMGC,EANH,EAMO;AACP;AACA,YAAI,KAAKC,iBAAL,KAA2B,KAAKH,UAApC,EAAgD;AAC7C;AACA,iBAAKI,QAAL;AACA;AACH;;AAED,YAAIC,eAAe,IAAI,KAAKC,IAAL,CAAUC,KAAV,GAAgB,KAAKD,IAAL,CAAUE,YAAjD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKC,IAAL,CAAUC,OAAV,GAAoBF,aAAaG,KAAKC,KAAL,CAAWR,gBAAgB,MAAMI,UAAtB,CAAX,CAAjC;AAEH,KAlBI;;AAmBL;AACAN,uBAAmB,6BAAY;AAC3B;AACA,YAAIW,YAAY,KAAKR,IAAL,CAAUS,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAO,KAAKP,IAAL,CAAUQ,QAAV,CAAmBC,GAAnB,CAAuBL,SAAvB,EAAkCM,GAAlC,EAAX;AACA,eAAOH,IAAP;AACH,KA1BI;;AA4BLb,cAAU,oBAAW;AACjB;AACA,aAAKE,IAAL,CAAUe,YAAV;AACA;AACA,aAAKf,IAAL,CAAUgB,SAAV;AACA;AACA,aAAKZ,IAAL,CAAUa,OAAV;AACH;AAnCI,CAAT","file":"Star.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        pickRadius: 0,\n    },\n    update (dt) {\n         // judge if the distance between the star and main character is less than the collecting distance for each frame\n         if (this.getPlayerDistance() < this.pickRadius) {\n            // invoke collecting behavior\n            this.onPicked();\n            return;\n        }\n\n        var opacityRatio = 1 - this.game.timer/this.game.starDuration;\n        var minOpacity = 50;\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n        \n    },\n    // Get Player Distance\n    getPlayerDistance: function () {\n        // judge the distance according to the position of the player node\n        var playerPos = this.game.player.getPosition();\n        // calculate the distance between two nodes according to their positions\n        var dist = this.node.position.sub(playerPos).mag();\n        return dist;\n    },\n\n    onPicked: function() {\n        // When the stars are being collected, invoke the interface in the Game script to generate a new star\n        this.game.spawnNewStar();\n        //Set New Score\n        this.game.gainScore();\n        // then destroy the current star's node\n        this.node.destroy();\n    },\n});\n"]}