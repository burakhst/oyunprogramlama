{"version":3,"sources":["assets/scripts/Player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","start","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","repeatForever","sequence","onLoad","jumpAction","node","runAction","accLeft","accRight","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","event","keyCode","macro","KEY","a","d","update","dt","Math","abs","x","onDestroy","off"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // main character's jump height\n        jumpHeight: 0,\n        // main character's jump duration\n        jumpDuration: 0,\n        // maximal movement speed\n        maxMoveSpeed: 0,\n        // acceleration\n        accel: 0,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    setJumpAction: function () {\n        // jump up\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        // jump down\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n        //  repeat\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown));\n    },\n    onLoad : function(){\n        this.jumpAction = this.setJumpAction();\n\n        this.node.runAction(this.jumpAction);\n\n            // Acceleration direction switch\n            this.accLeft = false;\n            this.accRight = false;\n            // The main character's current horizontal velocity\n            this.xSpeed = 0;\n    \n            // Initialize the keyboard input listening\n            cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n            cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this); \n    },\n    onKeyDown (event) {\n        // set a flag when key pressed\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = true;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = true;\n                break;\n        }\n    },\n\n    onKeyUp (event) {\n        // unset a flag when key released\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = false;\n                break;\n        }\n    },\n\n     update (dt) {\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // restrict the movement speed of the main character to the maximum movement speed\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // update the position of the main character according to the current speed\n        this.node.x += this.xSpeed * dt;\n     },\n\n    onDestroy () {\n        // Cancel keyboard input monitoring\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n});\n"]}