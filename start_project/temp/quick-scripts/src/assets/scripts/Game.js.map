{"version":3,"sources":["assets/scripts/Game.js"],"names":["cc","Class","Component","properties","starPrefab","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","start","onLoad","timer","starDuration","score","groundY","y","height","spawnNewStar","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","Math","random","randX","randY","jumpHeight","maxX","width","v2","gainScore","string","update","dt","gameOver","stopAllActions","director","loadScene"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n         // the random scale of disappearing time for stars\n         maxStarDuration: 0,\n         minStarDuration: 0,\n         // ground node for confirming the height of the generated star's position\n         ground: {\n             default: null,\n             type: cc.Node\n         },\n         // player node for obtaining the jump height of the main character and controlling the movement switch of the main character\n         player: {\n             default: null,\n             type: cc.Node\n         },\n\n         scoreDisplay: {\n            default: null,\n            type: cc.Label\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    onLoad: function () {\n\n        this.timer = 0;\n\n        this.starDuration = 0;\n\n        this.score = 0;\n        // obtain the anchor point of ground level on the y axis\n        this.groundY = this.ground.y + this.ground.height/2; // this.ground.top may also work\n        // generate a new star\n        this.spawnNewStar();\n    },\n\n    spawnNewStar: function() {\n        // generate a new node in the scene with a preset template\n        var newStar = cc.instantiate(this.starPrefab);\n        // put the newly added node under the Canvas node\n        this.node.addChild(newStar);\n        // set up a random position for the star\n        newStar.setPosition(this.getNewStarPosition());\n        //Bind this \n        newStar.getComponent('Star').game = this;\n          // reset timer, randomly choose a value according the scale of star duration\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        \n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        // According to the position of the ground level and the main character's jump height, randomly obtain an anchor point of the star on the y axis\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\n        // according to the width of the screen, randomly obtain an anchor point of star on the x axis\n        var maxX = this.node.width/2;\n        randX = (Math.random() - 0.5) * 2 * maxX;\n        // return to the anchor point of the star\n        return cc.v2(randX, randY);\n    },\n\n    gainScore : function(){\n        this.score += 1;\n        //Return if null\n        if(this.scoreDisplay === null) return;\n\n        this.scoreDisplay.string = \"Score : \"+ this.score;\n    },\n    update (dt) {\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            return;\n        }\n        this.timer += dt;\n    },\n    gameOver: function () {\n        this.player.stopAllActions(); //stop the jumping action of the player node\n        cc.director.loadScene('game');\n    }\n});\n"]}